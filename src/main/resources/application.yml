quarkus:
  profile:
    parent: env
  log:
    level: INFO
    category:
      "task.service":
        level: DEBUG
      "io.smallrye.faulttolerance": INFO

  http:
    port: ${PORT}

  mongodb:
    connection-string: ${LOCAL_MONGO_URL}
    database: ${LOCAL_MONGO_DB}

kafka:
  bootstrap:
    servers: ${LOCAL_BROKER}

logging:
  level:
    org.apache.kafka: INFO
    org.springframework.kafka: INFO

mp:
  messaging:
    incoming:
      created:
        connector: smallrye-kafka
        topic: "item-created"
        value:
          deserializer: org.apache.kafka.common.serialization.StringDeserializer
        key:
          deserializer: org.apache.kafka.common.serialization.StringDeserializer
      updated:
        connector: smallrye-kafka
        topic: "item-updated"
        value:
          deserializer: org.apache.kafka.common.serialization.StringDeserializer
        key:
          deserializer: org.apache.kafka.common.serialization.StringDeserializer
      deleted:
        connector: smallrye-kafka
        topic: "item-deleted"
        value:
          deserializer: org.apache.kafka.common.serialization.StringDeserializer
        key:
          deserializer: org.apache.kafka.common.serialization.StringDeserializer
    outgoing:
      completed:
        connector: smallrye-kafka
        topic: "feedback-completed"
        value:
          serializer: org.apache.kafka.common.serialization.StringSerializer
        key:
          serializer: org.apache.kafka.common.serialization.StringSerializer
        partitioner: org.apache.kafka.clients.producer.internals.DefaultPartitioner
      priority:
        connector: smallrye-kafka
        topic: "feedback-priority"
        value:
          serializer: org.apache.kafka.common.serialization.StringSerializer
        key:
          serializer: org.apache.kafka.common.serialization.StringSerializer
        partitioner: org.apache.kafka.clients.producer.internals.DefaultPartitioner
